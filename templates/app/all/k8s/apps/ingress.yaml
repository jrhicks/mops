---
to: ./k8s/apps/ingresses/<%=app_name%>-<%=rails_env%>.yaml
---
---
apiVersion: v1
kind: Service
metadata:
  name: <%=app_name%>-<%=rails_env%>-service
  namespace: <%=namespace%>
spec:
  type: ClusterIP # https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/1695
  selector:
    app: <%=app_name%>-<%=rails_env%>
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <%=app_name%>-<%=rails_env%>-ingress
  namespace: <%=namespace%>
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.5/guide/ingress/annotations/#target-type
    # Default target type (instance) doesn't work with ClusterIP Services
    # ClusterIP service are desirable because they are internal access only
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: "<%=ssl_cert_arn%>"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"  # or the policy that suits your security requirements
    # Share a single ALB with all Ingress rules with a specific group name
    alb.ingress.kubernetes.io/group.name: "shared-alb"

spec:
  rules:
    - host: "<%=sub_domain%>.<%=public_domain%>"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: <%=app_name%>-<%=rails_env%>-service
                port:
                  number: 80
